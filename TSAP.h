/*  TSAP.h  - this file auto generated by tools */

/* modification history
-----------------------

01a 2021-03-05 19:41:34     auto create by autogen moban tool
*/

/*
<autogen moban tool>
  author: frank
  bug report: frank_zhou@163.com
*/


#ifndef TSAP_H_H
#define TSAP_H_H


#ifdef __cplusplus
extern "C" {
#endif



// bit上升沿，清零保持后再置位，需要保持的时间
#define         FPGA_SLEEP_TIME      3             // fpga的上升沿时间 3ms
#define         NIOS_SLEEP_TIME      30            // nios的要时间长点 30ms


// errno defines
//#define     TSXA_BASE_ERROR                     0x54530000
#define     TSXA_BASE_ERROR                     0x0
#define     TSXA_SYSTEM_ERROR                   ( TSXA_BASE_ERROR + 0x01 )
#define     TSXA_ILLEGAL_CALL_ERROR             ( TSXA_BASE_ERROR + 0x02 )
#define     TSXA_TIMEOUT_ERROR                  ( TSXA_BASE_ERROR + 0x03 )
#define     TSXA_PARAMETER_ERROR                ( TSXA_BASE_ERROR + 0x04 )

#define     TSXA_BUFFER_ST_NO_MOVER_ERROR             20        // 缓冲工位没有动子停留



// INPUT  SYS
#define     SYS_CONTROL_ADDR                0X00

#define     SYS_G_VEL_ADDR                  0X22
#define     SYS_G_ACC_ADDR                  0X24
#define     SYS_G_JERK_ADDR                 0X26

#define     SYS_IN_MOVER_OFFSET_ADDR        0X40
#define     SYS_IN_STATION_PARA_ADDR        0X44

#define     STN_MOVE_NEXT_0_ADDR           0x80
#define     STN_MOVE_NEXT_32_ADDR          0x84
#define     STN_QSTOP_0_ADDR                0x88
#define     STN_QSTOP_32_ADDR                0x8c
#define     STN_EN_0_ADDR                0x90
#define     STN_EN_32_ADDR                0x94
#define     STN_MV_ENTR_ALLOW_0_ADDR           0x98
#define     STN_MV_ENTR_ALLOW_32_ADDR          0x9c
#define     STN_QSTOP_RESUME_0_ADDR      0xc0
#define     STN_QSTOP_RESUME_32_ADDR      0xc4


// INPUT MOVER 0
#define     MOVER_CONTROL_ADDR              0X100
#define     MOVER_TARGET_VEL_ADDR           0X102
#define     MOVER_TARGET_POS_ADDR           0X104
#define     MOVER_SET_ACC_ADDR              0X108
#define     MOVER_SET_DEC_ADDR              0X10A





// OUTPUT SYS
#define     SYS_STATUS_ADDR                 0X1000
#define     SYS_ERRNO_ADDR                  0X1004

#define     SYS_OUT_MOVER_OFFSET_ADDR       0x1040


// OUTPUT MOVER 0
#define     MOVER_STATUS_ADDR               0X1100
#define     MOVER_ACT_VEL_ADDR              0X1102
#define     MOVER_ACT_POS_ADDR              0X1104

// OUTPUT STATION 0
#define     STATION_STATUS_ADDR             0X1820


#define     ACTIVE_STATION_NUM         32



// 从0x1080 - 0x10ff开始的工位状态相关数据
typedef  struct
{
    UINT32  stn_reached_0;          // 0x1080
    UINT32  stn_reached_32;         // 0x1084
    UINT32  stn_occupied_0;         // 0x1088
    UINT32  stn_occupied_32;        // 0x108c
    UINT32  stn_EN_0;               // 0x1090
    UINT32  stn_EN_32;              // 0x1094
    UINT32  stn_mv_entr_allow_0;    // 0x1098
    UINT32  stn_mv_entr_allow_32;   // 0x109c

    int filler[4];                     // 0x10a0 - 0x10af
    
    UINT32  stn_mover_flag_0;       // 0x10b0
    UINT32  stn_mover_flag_32;      // 0x10b4
    
    int filler2[2];                     // 0x10b8 - 0x10bf
    
    UINT8 stn_reached_axis_id[64];      // 0x10c0 - 0x10ff
} tsap_mio_stn_status_reg_struct;






#ifndef TSAP_C

extern int TSAP_MA_task_exit(void);

extern int MIO_initialize_network(void)
;

extern int MIO_terminate_network(void);

extern int MIO_read_reg
            (
            IN      int     addr,
            OUT     UINT32  *value
            );

extern int MIO_write_reg
            (
            IN      int     addr,
            IN      UINT32  value
            );

extern int MIO_read_reg_longs
            (
            IN      int     addr,
            OUT     UINT32  *value,
            IN      int     int32_size
            );

extern int MIO_write_reg_longs
            (
            IN      int     addr,
            IN      UINT32  *value,
            IN      int     int32_size
            );

extern int TSAP_sys_control_set_bit
            (
            IN      int bit_index
            );

extern int TSAP_sys_control_clr( void );

extern int TSAP_mover_control_set_bit
            (
            IN      int id,
            IN      int bit_index
            );

extern int TSAP_mover_control_clr
            (
            IN      int id
            );

extern int TSAP_sys_initialize( void );

extern int TSAP_sys_terminate( void );

extern int TSAP_sys_start_work( void );

extern int TSAP_sys_stop_work( void );

extern int TSAP_sys_pause_work( void );

extern int TSAP_sys_resume_work( void );

extern int TSAP_sys_stop( void );

extern int TSAP_sys_quick_stop( void );

extern int TSAP_sys_reset_err( void );

extern int TSAP_sys_auto_pos_err_reset_on( void );

extern int TSAP_sys_auto_pos_err_reset_off( void );

extern int TSAP_sys_move_to_next_station_all( void );

extern int TSAP_sys_enable_axis_all( void );

extern int TSAP_sys_disable_axis_all( void );

extern int TSAP_sys_load_default_mc( void );

extern int TSAP_sys_save_mc_to_flash( void );

extern int TSAP_sys_set_mover_offset
            (
            IN      int     axis,
            IN      double  offset
            );

extern int TSAP_sys_get_mover_offset
            (
            IN      int     axis,
            OUT      double  *offset
            );

extern int TSAP_sys_get_status
            (
            OUT     UINT32  *sys_status,
            OUT     UINT32  *sys_errno,
            OUT     UINT32 *sys_errinfo
            );

extern int TSAP_sys_get_mover_num
            (
            OUT     int *mover_num,
            OUT     int *station_num
            );

extern int TSAP_st_set_station_para
            (
            IN      int                             id,
            IN      TSXA_SYS_STATION_para_struct    para
            );

extern int TSAP_st_move_next_station
            (
            IN      int station_id
            );

extern int TSAP_st_move_next_station_multi
            (
            IN      UINT32  station_list,
            IN      UINT32  station_list_32_63
            );

extern int TSAP_st_qstop
            (
            IN      int station
            );

extern int TSAP_st_qstop_resume
            (
            IN      int station
            );

extern int TSAP_st_enable
            (
            IN      int station_id
            );

extern int TSAP_st_disable
            (
            IN      int station_id
            );

extern int TSAP_st_get_mover_id
            (
            IN      int     st_id,
            OUT     BOOL    *reached,
            OUT     int     *mover_id
            );

extern int TSAP_axis_enable
            (
            IN      int axis
            );

extern int TSAP_axis_disable
            (
            IN      int axis
            );

extern int TSAP_axis_move_abs
            (
            IN      int     axis,
            IN      double  pos,
            IN      double  vel,
            IN      double  acc,
            IN      double  dec
            );

extern int TSAP_axis_limit_move_abs
            (
            IN      int     axis,
            IN      double  pos,
            IN      double  max_offset,
            IN      double  vel
            );

extern int TSAP_axis_move_rel
            (
            IN      int     axis,
            IN      double  pos,
            IN      double  vel,
            IN      double  acc,
            IN      double  dec
            );

extern int TSAP_axis_quick_stop
            (
            IN      int axis
            );

extern int TSAP_axis_stop
            (
            IN      int axis
            );

extern int TSAP_axis_reset
            (
            IN      int axis
            );

extern int TSAP_axis_move_vel
            (
            IN      int     axis,
            IN      BOOL    forward,
            IN      double  vel,
            IN      double  acc
            );

extern int TSAP_axis_change_vel
            (
            IN      int     axis,
            IN      double  vel
            );

extern int TSAP_axis_move_abs_g
            (
            IN      int     num,
            IN      int     *axis_list,
            IN      double  *pos_list,
            IN      double  *vel_list,
            IN      double  *acc_list,
            IN      double  *dec_list
            );

extern int TSAP_axis_move_rel_g
            (
            IN      int     num,
            IN      int     *axis_list,
            IN      double  *pos_list,
            IN      double  *vel_list,
            IN      double  *acc_list,
            IN      double  *dec_list
            );

extern int TSAP_axis_move_rel_all
            (
            IN      int     num,
            IN      double  pos_rel,
            IN      double  vel,
            IN      double  acc,
            IN      double  dec
            );

extern int TSAP_axis_get_status
            (
            IN      int     axis,
            OUT     UINT16  *mover_status,
            OUT     double  *act_pos,
            OUT     double  *act_vel
            );

extern int TSAP_axis_get_status_g
            (
            IN      int     mover_num,
            IN      int     *axis_list,
            OUT     UINT16  *mover_status_list,
            OUT     double  *act_vel_list,
            OUT     double  *act_pos_list
            );

extern int TSAP_axis_wait_move_end
            (
            IN      int axis,
            IN      int timeout
            );

extern int TSAP_axis_wait_move_end_g
            (
            IN      int num,
            IN      int *axis_list,
            IN      int timeout
            );

extern int TSAP_get_mover_pos
            (
            IN      int     axis,
            OUT     double  *pos,
            OUT     double  *vel
            );

extern int TSAP_get_mover_pos_group
            (
            IN      int     num,
            IN      int     *axis_list,
            OUT     double  *pos_list
            );

extern int TSAP_set_motion_parameter
            (
            IN      int     axis,
            IN      double  vel,
            IN      double  acc,
            IN      double  dec
            );

extern int TSAP_get_motion_parameter
            (
            IN      int     axis,
            OUT     double  *vel,
            OUT     double  *acc,
            OUT     double  *dec
            );

extern int TSAP_set_global_motion_parameter
            (
            IN      double  vel,
            IN      double  acc,
            IN      double  dec
            );

extern int TSAP_get_global_motion_parameter
            (
            OUT      double  *vel,
            OUT      double  *acc,
            OUT      double  *dec,
            OUT      double  *quick_stop_acc,
            OUT      double  *jerk
            );

extern int TSAP_axis_disable_all
            (
            IN      int num
            );

extern int TSAP_axis_enable_all
            (
            IN      int num
            );

extern int TSAP_st_get_all_mover_id
            (
            OUT     int *st_reached_num,
            OUT     int st_reached_id_list[32],
            OUT     int reaced_mover_id_list[32]
            );

extern int TSAP_st_get_all_mover_id_32
            (
            OUT     int *st_reached_num,
            OUT     int st_reached_id_list[32],
            OUT     int reaced_mover_id_list[32]
            );

extern int TSAP_st_get_occupy
            (
            IN      int     st_id,
            OUT     BOOL    *has
            );

extern int TSAP_st_set_allow_entering
            (
            IN      int     st_id,
            IN      BOOL    allow
            );

extern int TSAP_get_sys_state
            (
            OUT     BOOL    *inited,
            OUT     BOOL    *autoworked
            );

extern int TSAP_st_get_pos
            (
            IN      int     st_id,
            OUT     double  *pos
            );

extern int TSAP_st_limit
            (
            IN      int station_id,
            IN      BOOL station_op
            );

extern int TSAP_mv_ison
            (
            IN      int     mover_id,
            OUT     int*    yes
            );

extern int TSAP_st_set_station_pv
            (
                IN int id,
                IN double pos,
                IN double vel,
                IN BOOL save_to_flash                   // 是否保存到flash永久保存
            );

extern int TSAP_st_act_limit
            (
            IN      int station_id,
            IN      int limit_en
            );


extern int tsap_start_read_mio_reg_thread(void);


extern int  TSAP_st_dianjiao_set
        (
        IN int st_num,
        IN int st_list[8]           // 点胶有效的工位列表，后续没有使用的用0填充
       );

extern int  TSAP_st_zhuzhuang_set
        (
        IN int st_num,
        IN int st_list[8]            // 组装有效的工位列表，后续没有使用的用0填充
       );


#endif // end of TSAP_C


#ifdef __cplusplus
}
#endif

#endif  // end of TSAP_H_H
